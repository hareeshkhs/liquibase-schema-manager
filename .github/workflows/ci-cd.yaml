name: CI/CD - Dockerize and Push

on:
  pull_request:
    branches:
      - master
    types:
      - opened
      - synchronize
      - reopened
  workflow_dispatch:

jobs:
  lint:
    name: 🧹 Lint Check
    if: startsWith(github.head_ref, 'feature/')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install flake8
        run: pip install flake8

      - name: Run Lint
        run: flake8 . --exclude=venv,__pycache__

  test:
    name: ✅ Run Unit Tests
    if: startsWith(github.head_ref, 'feature/')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest

      - name: Run Tests
        run: pytest

  docker:
    name: 🐳 Build & Push to GHCR
    if: startsWith(github.head_ref, 'feature/')
    runs-on: ubuntu-latest
    needs: [lint, test]

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract version
        id: get_version
        run: |
          VERSION=$(grep '__version__' version.py | cut -d '"' -f2)
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Build Docker Image
        run: |
          docker build -t ghcr.io/${{ github.repository }}:${{ steps.get_version.outputs.VERSION }} .

      - name: Push Docker Image
        run: |
          docker push ghcr.io/${{ github.repository }}:${{ steps.get_version.outputs.VERSION }}

      - name: Output Success
        run: echo "✅ Image successfully pushed with tag: ${{ steps.get_version.outputs.VERSION }}"
