name: Deploy Schema via Jenkins

on:
  workflow_dispatch:
    inputs:
      image_tag:
        description: "Docker image tag (e.g., v1.0.0)"
        required: true
      db_name:
        description: "PostgreSQL database name"
        required: true
      available_schemas:
        description: "Available schemas to deploy (comma-separated)"
        required: true

jobs:
  trigger-jenkins-deployment:
    name: Trigger Jenkins Job
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Fetch Jenkins Crumb
        id: get-crumb
        env:
          JENKINS_URL: ${{ secrets.JENKINS_URL }}
          JENKINS_USER: ${{ secrets.JENKINS_USER }}
          JENKINS_API_TOKEN: ${{ secrets.JENKINS_API_TOKEN }}
        run: |
          echo "Fetching Jenkins crumb..."
          crumb_json=$(curl -s --user "$JENKINS_USER:$JENKINS_API_TOKEN" "$JENKINS_URL/crumbIssuer/api/json")
          echo "Crumb JSON: $crumb_json"
          crumb=$(echo "$crumb_json" | jq -r '.crumb')
          crumb_field=$(echo "$crumb_json" | jq -r '.crumbRequestField')
          echo "crumb=$crumb" >> $GITHUB_OUTPUT
          echo "crumb_field=$crumb_field" >> $GITHUB_OUTPUT

      - name: Trigger Jenkins Job
        env:
          JENKINS_URL: ${{ secrets.JENKINS_URL }}
          JENKINS_JOB: liquibase-deploy-job
          JENKINS_USER: ${{ secrets.JENKINS_USER }}
          JENKINS_API_TOKEN: ${{ secrets.JENKINS_API_TOKEN }}
          CRUMB: ${{ steps.get-crumb.outputs.crumb }}
          CRUMB_FIELD: ${{ steps.get-crumb.outputs.crumb_field }}
        run: |
          echo "Triggering Jenkins job for TAG=${{ inputs.image_tag }} on DB=${{ inputs.db_name }}"

          curl -X POST "$JENKINS_URL/job/$JENKINS_JOB/buildWithParameters" \
            --user "$JENKINS_USER:$JENKINS_API_TOKEN" \
            -H "$CRUMB_FIELD: $CRUMB" \
            --data-urlencode "TAG=${{ inputs.image_tag }}" \
            --data-urlencode "POSTGRES_DB=${{ inputs.db_name }}" \
            --data-urlencode "AVAILABLE_SCHEMAS=${{ inputs.available_schemas }}" \
            --data-urlencode "POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}" \
            --data-urlencode "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" \
            --data-urlencode "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" \
            --data-urlencode "EMAIL_APP_PASSCODE=${{ secrets.EMAIL_APP_PASSCODE }}" \
            --data-urlencode "CONTAINER_NAME=schema-manager" \
            --fail

      - name: âœ… Success Message
        run: echo "Jenkins job triggered successfully for image_tag=${{ inputs.image_tag }} and db=${{ inputs.db_name }}"
